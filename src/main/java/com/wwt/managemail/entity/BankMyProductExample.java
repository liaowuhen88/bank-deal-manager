package com.wwt.managemail.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class BankMyProductExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table bank_my_product
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table bank_my_product
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table bank_my_product
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bank_my_product
     *
     * @mbg.generated
     */
    public BankMyProductExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bank_my_product
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bank_my_product
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bank_my_product
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bank_my_product
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bank_my_product
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bank_my_product
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bank_my_product
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bank_my_product
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bank_my_product
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bank_my_product
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table bank_my_product
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andBankCardIdIsNull() {
            addCriterion("bank_card_id is null");
            return (Criteria) this;
        }

        public Criteria andBankCardIdIsNotNull() {
            addCriterion("bank_card_id is not null");
            return (Criteria) this;
        }

        public Criteria andBankCardIdEqualTo(Integer value) {
            addCriterion("bank_card_id =", value, "bankCardId");
            return (Criteria) this;
        }

        public Criteria andBankCardIdNotEqualTo(Integer value) {
            addCriterion("bank_card_id <>", value, "bankCardId");
            return (Criteria) this;
        }

        public Criteria andBankCardIdGreaterThan(Integer value) {
            addCriterion("bank_card_id >", value, "bankCardId");
            return (Criteria) this;
        }

        public Criteria andBankCardIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("bank_card_id >=", value, "bankCardId");
            return (Criteria) this;
        }

        public Criteria andBankCardIdLessThan(Integer value) {
            addCriterion("bank_card_id <", value, "bankCardId");
            return (Criteria) this;
        }

        public Criteria andBankCardIdLessThanOrEqualTo(Integer value) {
            addCriterion("bank_card_id <=", value, "bankCardId");
            return (Criteria) this;
        }

        public Criteria andBankCardIdIn(List<Integer> values) {
            addCriterion("bank_card_id in", values, "bankCardId");
            return (Criteria) this;
        }

        public Criteria andBankCardIdNotIn(List<Integer> values) {
            addCriterion("bank_card_id not in", values, "bankCardId");
            return (Criteria) this;
        }

        public Criteria andBankCardIdBetween(Integer value1, Integer value2) {
            addCriterion("bank_card_id between", value1, value2, "bankCardId");
            return (Criteria) this;
        }

        public Criteria andBankCardIdNotBetween(Integer value1, Integer value2) {
            addCriterion("bank_card_id not between", value1, value2, "bankCardId");
            return (Criteria) this;
        }

        public Criteria andBankProductIdIsNull() {
            addCriterion("bank_product_id is null");
            return (Criteria) this;
        }

        public Criteria andBankProductIdIsNotNull() {
            addCriterion("bank_product_id is not null");
            return (Criteria) this;
        }

        public Criteria andBankProductIdEqualTo(Integer value) {
            addCriterion("bank_product_id =", value, "bankProductId");
            return (Criteria) this;
        }

        public Criteria andBankProductIdNotEqualTo(Integer value) {
            addCriterion("bank_product_id <>", value, "bankProductId");
            return (Criteria) this;
        }

        public Criteria andBankProductIdGreaterThan(Integer value) {
            addCriterion("bank_product_id >", value, "bankProductId");
            return (Criteria) this;
        }

        public Criteria andBankProductIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("bank_product_id >=", value, "bankProductId");
            return (Criteria) this;
        }

        public Criteria andBankProductIdLessThan(Integer value) {
            addCriterion("bank_product_id <", value, "bankProductId");
            return (Criteria) this;
        }

        public Criteria andBankProductIdLessThanOrEqualTo(Integer value) {
            addCriterion("bank_product_id <=", value, "bankProductId");
            return (Criteria) this;
        }

        public Criteria andBankProductIdIn(List<Integer> values) {
            addCriterion("bank_product_id in", values, "bankProductId");
            return (Criteria) this;
        }

        public Criteria andBankProductIdNotIn(List<Integer> values) {
            addCriterion("bank_product_id not in", values, "bankProductId");
            return (Criteria) this;
        }

        public Criteria andBankProductIdBetween(Integer value1, Integer value2) {
            addCriterion("bank_product_id between", value1, value2, "bankProductId");
            return (Criteria) this;
        }

        public Criteria andBankProductIdNotBetween(Integer value1, Integer value2) {
            addCriterion("bank_product_id not between", value1, value2, "bankProductId");
            return (Criteria) this;
        }

        public Criteria andInvestmentAmountIsNull() {
            addCriterion("investment_amount is null");
            return (Criteria) this;
        }

        public Criteria andInvestmentAmountIsNotNull() {
            addCriterion("investment_amount is not null");
            return (Criteria) this;
        }

        public Criteria andInvestmentAmountEqualTo(Long value) {
            addCriterion("investment_amount =", value, "investmentAmount");
            return (Criteria) this;
        }

        public Criteria andInvestmentAmountNotEqualTo(Long value) {
            addCriterion("investment_amount <>", value, "investmentAmount");
            return (Criteria) this;
        }

        public Criteria andInvestmentAmountGreaterThan(Long value) {
            addCriterion("investment_amount >", value, "investmentAmount");
            return (Criteria) this;
        }

        public Criteria andInvestmentAmountGreaterThanOrEqualTo(Long value) {
            addCriterion("investment_amount >=", value, "investmentAmount");
            return (Criteria) this;
        }

        public Criteria andInvestmentAmountLessThan(Long value) {
            addCriterion("investment_amount <", value, "investmentAmount");
            return (Criteria) this;
        }

        public Criteria andInvestmentAmountLessThanOrEqualTo(Long value) {
            addCriterion("investment_amount <=", value, "investmentAmount");
            return (Criteria) this;
        }

        public Criteria andInvestmentAmountIn(List<Long> values) {
            addCriterion("investment_amount in", values, "investmentAmount");
            return (Criteria) this;
        }

        public Criteria andInvestmentAmountNotIn(List<Long> values) {
            addCriterion("investment_amount not in", values, "investmentAmount");
            return (Criteria) this;
        }

        public Criteria andInvestmentAmountBetween(Long value1, Long value2) {
            addCriterion("investment_amount between", value1, value2, "investmentAmount");
            return (Criteria) this;
        }

        public Criteria andInvestmentAmountNotBetween(Long value1, Long value2) {
            addCriterion("investment_amount not between", value1, value2, "investmentAmount");
            return (Criteria) this;
        }

        public Criteria andInterestRateIsNull() {
            addCriterion("interest_rate is null");
            return (Criteria) this;
        }

        public Criteria andInterestRateIsNotNull() {
            addCriterion("interest_rate is not null");
            return (Criteria) this;
        }

        public Criteria andInterestRateEqualTo(Long value) {
            addCriterion("interest_rate =", value, "interestRate");
            return (Criteria) this;
        }

        public Criteria andInterestRateNotEqualTo(Long value) {
            addCriterion("interest_rate <>", value, "interestRate");
            return (Criteria) this;
        }

        public Criteria andInterestRateGreaterThan(Long value) {
            addCriterion("interest_rate >", value, "interestRate");
            return (Criteria) this;
        }

        public Criteria andInterestRateGreaterThanOrEqualTo(Long value) {
            addCriterion("interest_rate >=", value, "interestRate");
            return (Criteria) this;
        }

        public Criteria andInterestRateLessThan(Long value) {
            addCriterion("interest_rate <", value, "interestRate");
            return (Criteria) this;
        }

        public Criteria andInterestRateLessThanOrEqualTo(Long value) {
            addCriterion("interest_rate <=", value, "interestRate");
            return (Criteria) this;
        }

        public Criteria andInterestRateIn(List<Long> values) {
            addCriterion("interest_rate in", values, "interestRate");
            return (Criteria) this;
        }

        public Criteria andInterestRateNotIn(List<Long> values) {
            addCriterion("interest_rate not in", values, "interestRate");
            return (Criteria) this;
        }

        public Criteria andInterestRateBetween(Long value1, Long value2) {
            addCriterion("interest_rate between", value1, value2, "interestRate");
            return (Criteria) this;
        }

        public Criteria andInterestRateNotBetween(Long value1, Long value2) {
            addCriterion("interest_rate not between", value1, value2, "interestRate");
            return (Criteria) this;
        }

        public Criteria andProfitDateIsNull() {
            addCriterion("profit_Date is null");
            return (Criteria) this;
        }

        public Criteria andProfitDateIsNotNull() {
            addCriterion("profit_Date is not null");
            return (Criteria) this;
        }

        public Criteria andProfitDateEqualTo(Date value) {
            addCriterionForJDBCDate("profit_Date =", value, "profitDate");
            return (Criteria) this;
        }

        public Criteria andProfitDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("profit_Date <>", value, "profitDate");
            return (Criteria) this;
        }

        public Criteria andProfitDateGreaterThan(Date value) {
            addCriterionForJDBCDate("profit_Date >", value, "profitDate");
            return (Criteria) this;
        }

        public Criteria andProfitDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("profit_Date >=", value, "profitDate");
            return (Criteria) this;
        }

        public Criteria andProfitDateLessThan(Date value) {
            addCriterionForJDBCDate("profit_Date <", value, "profitDate");
            return (Criteria) this;
        }

        public Criteria andProfitDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("profit_Date <=", value, "profitDate");
            return (Criteria) this;
        }

        public Criteria andProfitDateIn(List<Date> values) {
            addCriterionForJDBCDate("profit_Date in", values, "profitDate");
            return (Criteria) this;
        }

        public Criteria andProfitDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("profit_Date not in", values, "profitDate");
            return (Criteria) this;
        }

        public Criteria andProfitDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("profit_Date between", value1, value2, "profitDate");
            return (Criteria) this;
        }

        public Criteria andProfitDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("profit_Date not between", value1, value2, "profitDate");
            return (Criteria) this;
        }

        public Criteria andDepositPeriodIsNull() {
            addCriterion("deposit_period is null");
            return (Criteria) this;
        }

        public Criteria andDepositPeriodIsNotNull() {
            addCriterion("deposit_period is not null");
            return (Criteria) this;
        }

        public Criteria andDepositPeriodEqualTo(Date value) {
            addCriterionForJDBCDate("deposit_period =", value, "depositPeriod");
            return (Criteria) this;
        }

        public Criteria andDepositPeriodNotEqualTo(Date value) {
            addCriterionForJDBCDate("deposit_period <>", value, "depositPeriod");
            return (Criteria) this;
        }

        public Criteria andDepositPeriodGreaterThan(Date value) {
            addCriterionForJDBCDate("deposit_period >", value, "depositPeriod");
            return (Criteria) this;
        }

        public Criteria andDepositPeriodGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("deposit_period >=", value, "depositPeriod");
            return (Criteria) this;
        }

        public Criteria andDepositPeriodLessThan(Date value) {
            addCriterionForJDBCDate("deposit_period <", value, "depositPeriod");
            return (Criteria) this;
        }

        public Criteria andDepositPeriodLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("deposit_period <=", value, "depositPeriod");
            return (Criteria) this;
        }

        public Criteria andDepositPeriodIn(List<Date> values) {
            addCriterionForJDBCDate("deposit_period in", values, "depositPeriod");
            return (Criteria) this;
        }

        public Criteria andDepositPeriodNotIn(List<Date> values) {
            addCriterionForJDBCDate("deposit_period not in", values, "depositPeriod");
            return (Criteria) this;
        }

        public Criteria andDepositPeriodBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("deposit_period between", value1, value2, "depositPeriod");
            return (Criteria) this;
        }

        public Criteria andDepositPeriodNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("deposit_period not between", value1, value2, "depositPeriod");
            return (Criteria) this;
        }

        public Criteria andTotalEffectiveUnterestIncomeIsNull() {
            addCriterion("total_effective_unterest_income is null");
            return (Criteria) this;
        }

        public Criteria andTotalEffectiveUnterestIncomeIsNotNull() {
            addCriterion("total_effective_unterest_income is not null");
            return (Criteria) this;
        }

        public Criteria andTotalEffectiveUnterestIncomeEqualTo(Long value) {
            addCriterion("total_effective_unterest_income =", value, "totalEffectiveUnterestIncome");
            return (Criteria) this;
        }

        public Criteria andTotalEffectiveUnterestIncomeNotEqualTo(Long value) {
            addCriterion("total_effective_unterest_income <>", value, "totalEffectiveUnterestIncome");
            return (Criteria) this;
        }

        public Criteria andTotalEffectiveUnterestIncomeGreaterThan(Long value) {
            addCriterion("total_effective_unterest_income >", value, "totalEffectiveUnterestIncome");
            return (Criteria) this;
        }

        public Criteria andTotalEffectiveUnterestIncomeGreaterThanOrEqualTo(Long value) {
            addCriterion("total_effective_unterest_income >=", value, "totalEffectiveUnterestIncome");
            return (Criteria) this;
        }

        public Criteria andTotalEffectiveUnterestIncomeLessThan(Long value) {
            addCriterion("total_effective_unterest_income <", value, "totalEffectiveUnterestIncome");
            return (Criteria) this;
        }

        public Criteria andTotalEffectiveUnterestIncomeLessThanOrEqualTo(Long value) {
            addCriterion("total_effective_unterest_income <=", value, "totalEffectiveUnterestIncome");
            return (Criteria) this;
        }

        public Criteria andTotalEffectiveUnterestIncomeIn(List<Long> values) {
            addCriterion("total_effective_unterest_income in", values, "totalEffectiveUnterestIncome");
            return (Criteria) this;
        }

        public Criteria andTotalEffectiveUnterestIncomeNotIn(List<Long> values) {
            addCriterion("total_effective_unterest_income not in", values, "totalEffectiveUnterestIncome");
            return (Criteria) this;
        }

        public Criteria andTotalEffectiveUnterestIncomeBetween(Long value1, Long value2) {
            addCriterion("total_effective_unterest_income between", value1, value2, "totalEffectiveUnterestIncome");
            return (Criteria) this;
        }

        public Criteria andTotalEffectiveUnterestIncomeNotBetween(Long value1, Long value2) {
            addCriterion("total_effective_unterest_income not between", value1, value2, "totalEffectiveUnterestIncome");
            return (Criteria) this;
        }

        public Criteria andBuyingTimeIsNull() {
            addCriterion("buying_time is null");
            return (Criteria) this;
        }

        public Criteria andBuyingTimeIsNotNull() {
            addCriterion("buying_time is not null");
            return (Criteria) this;
        }

        public Criteria andBuyingTimeEqualTo(Date value) {
            addCriterionForJDBCDate("buying_time =", value, "buyingTime");
            return (Criteria) this;
        }

        public Criteria andBuyingTimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("buying_time <>", value, "buyingTime");
            return (Criteria) this;
        }

        public Criteria andBuyingTimeGreaterThan(Date value) {
            addCriterionForJDBCDate("buying_time >", value, "buyingTime");
            return (Criteria) this;
        }

        public Criteria andBuyingTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("buying_time >=", value, "buyingTime");
            return (Criteria) this;
        }

        public Criteria andBuyingTimeLessThan(Date value) {
            addCriterionForJDBCDate("buying_time <", value, "buyingTime");
            return (Criteria) this;
        }

        public Criteria andBuyingTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("buying_time <=", value, "buyingTime");
            return (Criteria) this;
        }

        public Criteria andBuyingTimeIn(List<Date> values) {
            addCriterionForJDBCDate("buying_time in", values, "buyingTime");
            return (Criteria) this;
        }

        public Criteria andBuyingTimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("buying_time not in", values, "buyingTime");
            return (Criteria) this;
        }

        public Criteria andBuyingTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("buying_time between", value1, value2, "buyingTime");
            return (Criteria) this;
        }

        public Criteria andBuyingTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("buying_time not between", value1, value2, "buyingTime");
            return (Criteria) this;
        }

        public Criteria andDueTimeIsNull() {
            addCriterion("due_time is null");
            return (Criteria) this;
        }

        public Criteria andDueTimeIsNotNull() {
            addCriterion("due_time is not null");
            return (Criteria) this;
        }

        public Criteria andDueTimeEqualTo(Date value) {
            addCriterionForJDBCDate("due_time =", value, "dueTime");
            return (Criteria) this;
        }

        public Criteria andDueTimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("due_time <>", value, "dueTime");
            return (Criteria) this;
        }

        public Criteria andDueTimeGreaterThan(Date value) {
            addCriterionForJDBCDate("due_time >", value, "dueTime");
            return (Criteria) this;
        }

        public Criteria andDueTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("due_time >=", value, "dueTime");
            return (Criteria) this;
        }

        public Criteria andDueTimeLessThan(Date value) {
            addCriterionForJDBCDate("due_time <", value, "dueTime");
            return (Criteria) this;
        }

        public Criteria andDueTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("due_time <=", value, "dueTime");
            return (Criteria) this;
        }

        public Criteria andDueTimeIn(List<Date> values) {
            addCriterionForJDBCDate("due_time in", values, "dueTime");
            return (Criteria) this;
        }

        public Criteria andDueTimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("due_time not in", values, "dueTime");
            return (Criteria) this;
        }

        public Criteria andDueTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("due_time between", value1, value2, "dueTime");
            return (Criteria) this;
        }

        public Criteria andDueTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("due_time not between", value1, value2, "dueTime");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNull() {
            addCriterion("remark is null");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNotNull() {
            addCriterion("remark is not null");
            return (Criteria) this;
        }

        public Criteria andRemarkEqualTo(String value) {
            addCriterion("remark =", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotEqualTo(String value) {
            addCriterion("remark <>", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThan(String value) {
            addCriterion("remark >", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThanOrEqualTo(String value) {
            addCriterion("remark >=", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLessThan(String value) {
            addCriterion("remark <", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLessThanOrEqualTo(String value) {
            addCriterion("remark <=", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLike(String value) {
            addCriterion("remark like", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotLike(String value) {
            addCriterion("remark not like", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkIn(List<String> values) {
            addCriterion("remark in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotIn(List<String> values) {
            addCriterion("remark not in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkBetween(String value1, String value2) {
            addCriterion("remark between", value1, value2, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotBetween(String value1, String value2) {
            addCriterion("remark not between", value1, value2, "remark");
            return (Criteria) this;
        }

        public Criteria andCreateIsNull() {
            addCriterion("create is null");
            return (Criteria) this;
        }

        public Criteria andCreateIsNotNull() {
            addCriterion("create is not null");
            return (Criteria) this;
        }

        public Criteria andCreateEqualTo(String value) {
            addCriterion("create =", value, "create");
            return (Criteria) this;
        }

        public Criteria andCreateNotEqualTo(String value) {
            addCriterion("create <>", value, "create");
            return (Criteria) this;
        }

        public Criteria andCreateGreaterThan(String value) {
            addCriterion("create >", value, "create");
            return (Criteria) this;
        }

        public Criteria andCreateGreaterThanOrEqualTo(String value) {
            addCriterion("create >=", value, "create");
            return (Criteria) this;
        }

        public Criteria andCreateLessThan(String value) {
            addCriterion("create <", value, "create");
            return (Criteria) this;
        }

        public Criteria andCreateLessThanOrEqualTo(String value) {
            addCriterion("create <=", value, "create");
            return (Criteria) this;
        }

        public Criteria andCreateLike(String value) {
            addCriterion("create like", value, "create");
            return (Criteria) this;
        }

        public Criteria andCreateNotLike(String value) {
            addCriterion("create not like", value, "create");
            return (Criteria) this;
        }

        public Criteria andCreateIn(List<String> values) {
            addCriterion("create in", values, "create");
            return (Criteria) this;
        }

        public Criteria andCreateNotIn(List<String> values) {
            addCriterion("create not in", values, "create");
            return (Criteria) this;
        }

        public Criteria andCreateBetween(String value1, String value2) {
            addCriterion("create between", value1, value2, "create");
            return (Criteria) this;
        }

        public Criteria andCreateNotBetween(String value1, String value2) {
            addCriterion("create not between", value1, value2, "create");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table bank_my_product
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table bank_my_product
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }
    }
}